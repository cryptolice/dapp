import React, {useState} from 'react';
import Layout from "../../components/Layout";
import Head from "next/head";
import Header from "../../components/Header";
import Card from "../../components/Card";
import {getSecurityAddress, RiskDetail, useSecurityAddress} from "../../hooks/useSecurityAddress";
import {ChainId} from "../../utils/api";
import Result from "./Result";
import InputForm from "./InputForm";
import {useForm} from "react-hook-form";

const SearchAddressPage = () => {
  const [address, setAddress] = useState('');
  const [securityInfo, setSecurityInfo] = useState<any>(null)
  const [loading, setLoading] = useState(false);
  const form = useForm({
    mode: 'onBlur',
    defaultValues: {
      address: ''
    }
  });

  async function fetchSecurityAddress(chainId: ChainId, address: string) {
    setLoading(true);
    try {
      const result = await getSecurityAddress(chainId, address);
      if (!result) return;
      const riskDetails: RiskDetail[] = result?.risk_details ? result.risk_details : [];
      const trustScore = result?.trust_score ?? Number.NaN;
      setSecurityInfo({
        trustScore,
        riskDetails,
      });
    } finally {
      setLoading(false);
    }
  }

  return (
    <Layout>
      <Head>
        <title>Search Address | Cryptolice</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <Header/>
      <main
        className={'flex flex-col justify-center items-center my-16'}
      >
        <Card className={'w-[600px] !py-12 !px-12'}>
          {securityInfo ? (
            <Result
              address={address}
              score={securityInfo.trustScore}
              riskDetails={securityInfo.riskDetails}
              onTryAnother={() => {
                setAddress('');
                setSecurityInfo(null);
                form.reset()
              }}
            />
          ) : (
            <InputForm
              form={form}
              loading={loading}
              onSubmit={async (data) => {
                setAddress(data.address)
                await fetchSecurityAddress(ChainId.BNB_MAINNET, data.address)
              }}
            />
          )}
        </Card>

      </main>
    </Layout>
  );
};

export default SearchAddressPage;